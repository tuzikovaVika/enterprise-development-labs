// <auto-generated />
using System;
using AirlineBooking.Infrastructure.EfCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AirlineBooking.Infrastructure.EfCore.Migrations
{
    [DbContext(typeof(AirlineBookingDbContext))]
    partial class AirlineBookingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("AirlineBooking.Domain.Model.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("FlightId")
                        .HasColumnType("int");

                    b.Property<string>("TicketNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("FlightId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            FlightId = 1,
                            TicketNumber = "TICKET123"
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 1,
                            FlightId = 1,
                            TicketNumber = "TICKET456"
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 1,
                            FlightId = 2,
                            TicketNumber = "TICKET789"
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 3,
                            FlightId = 2,
                            TicketNumber = "TICKET101"
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 3,
                            FlightId = 2,
                            TicketNumber = "TICKET112"
                        });
                });

            modelBuilder.Entity("AirlineBooking.Domain.Model.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Passport")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1990, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Иванов Иван Иванович",
                            Passport = "1234567890"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1985, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Петров Петр Петрович",
                            Passport = "0987654321"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1995, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Сидорова Анна Сергеевна",
                            Passport = "1122334455"
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(1980, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Кузнецов Дмитрий Александрович",
                            Passport = "2233445566"
                        });
                });

            modelBuilder.Entity("AirlineBooking.Domain.Model.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AircraftType")
                        .HasColumnType("longtext");

                    b.Property<string>("ArrivalCity")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ArrivalDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DepartureCity")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DepartureDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AircraftType = "Boeing 737",
                            ArrivalCity = "Санкт-Петербург",
                            ArrivalDate = new DateTime(2023, 10, 15, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartureCity = "Москва",
                            DepartureDate = new DateTime(2023, 10, 15, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            FlightNumber = "SU123"
                        },
                        new
                        {
                            Id = 2,
                            AircraftType = "Airbus A320",
                            ArrivalCity = "Москва",
                            ArrivalDate = new DateTime(2023, 10, 15, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartureCity = "Санкт-Петербург",
                            DepartureDate = new DateTime(2023, 10, 15, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            FlightNumber = "SU456"
                        },
                        new
                        {
                            Id = 3,
                            AircraftType = "Boeing 777",
                            ArrivalCity = "Сочи",
                            ArrivalDate = new DateTime(2023, 10, 16, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartureCity = "Москва",
                            DepartureDate = new DateTime(2023, 10, 16, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            FlightNumber = "SU789"
                        });
                });

            modelBuilder.Entity("AirlineBooking.Domain.Model.Booking", b =>
                {
                    b.HasOne("AirlineBooking.Domain.Model.Customer", "Customer")
                        .WithMany("Bookings")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AirlineBooking.Domain.Model.Flight", "Flight")
                        .WithMany("Bookings")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("AirlineBooking.Domain.Model.Customer", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("AirlineBooking.Domain.Model.Flight", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
